const removePalindromeSub = require('./../main/removePalindromeSub');
//    Question
//        Given a string s consisting only of letters 'a' and 'b'.In a single step you can remove one palindromic subsequence from s.
//        Return the minimum number of steps to make the given string empty.
//        A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.
//        A string is called palindrome if is one that reads the same backward as well as forward.

describe('引数に渡したaとbのみで構成された文字列が与えられる。\n 一回の試行で一つの回文の箇所を削除する \n 空の文字列になるまでの最小回数を返却する', () => {

    describe('removePalindromeSub の返却値が1以上のとき', () => {

        test('ababaを入力して1が返却されること', () => {
            expect(removePalindromeSub('ababa')).toBe(1);
        });

        test('abbを入力して2が返却されること', () => {
            expect(removePalindromeSub('abb')).toBe(2);
        });

        test('baabbを入力して2が返却されること', () => {
            expect(removePalindromeSub('baabb')).toBe(2);
        });
    });

    describe('removePalindromeSub の返却値が0のとき', () => {

        test('\'\'を入力して0が返却されること', () => {
            expect(removePalindromeSub('')).toBe(0);
        });
    });
});